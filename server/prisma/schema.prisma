generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Collection {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  // Products Products[]

  @@map("collection") //làm cách này để có thể đổi tên model tuỳ ý, mà có thể truy xuất data từ collection users của database
}

model Products {
  id               String     @id @default(auto()) @map("_id") @db.ObjectId
  descriptionShort String
  imageUrl         String
  name             String
  price            String
  forSale          Boolean    @default(false)
  type             String
  countInStock     String
  description      String
  ingredient       String
  reviews          String
  collection        String
  // collection       Collection @relation(fields: [collectionId], references: [id])
  // collectionId     String     @db.ObjectId

  //
  OrderItem OrderItem[]
  //
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@map("products") //làm cách này để có thể đổi tên model tuỳ ý, mà có thể truy xuất data từ collection users của database
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  firstName String
  lastName  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user_type UserType
  Order     Order[]

  @@map("users")


}

// =================
model Order {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  orderItems      OrderItem[]
  shippingAddress String
  paymentMethod   String
  itemsPrice      Int
  shippingPrice   Int
  totalPrice      Int
  user            User        @relation(fields: [userId], references: [id])
  userId          String      @db.ObjectId
  isPaid          Boolean     @default(false)
  paidAt          DateTime?
  isDelivered     Boolean     @default(false)
  deliveredAt     DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("order") //làm cách này để có thể đổi tên model tuỳ ý, mà có thể truy xuất data từ collection users của database
}

model ShippingAddress {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  fullName String
  address  String
  city     String
  phone    Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("shippingaddress") //làm cách này để có thể đổi tên model tuỳ ý, mà có thể truy xuất data từ collection users của database
}

model OrderItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  amount    Int
  image     String
  price     Int
  discount  Int?
  product   Products @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId

  Order   Order?  @relation(fields: [orderId], references: [id])
  orderId String? @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("orderitem")
}

enum UserType {
  USER
  ADMIN
}
